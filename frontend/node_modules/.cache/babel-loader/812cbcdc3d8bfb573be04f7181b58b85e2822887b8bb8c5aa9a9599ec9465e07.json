{"ast":null,"code":"var _jsxFileName = \"/app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { UserButton, useAuth, useUser } from '@clerk/clerk-react';\nimport ProfileCompletionModal from './ProfileCompletionModal';\nimport PublicHomePage from './PublicHomePage';\n\n// Mock user profile storage - in real app this would be in a database\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getUserProfile = userId => {\n  const stored = localStorage.getItem(`userProfile_${userId}`);\n  return stored ? JSON.parse(stored) : null;\n};\nconst saveUserProfile = (userId, profile) => {\n  localStorage.setItem(`userProfile_${userId}`, JSON.stringify(profile));\n};\nfunction App() {\n  _s();\n  const {\n    isSignedIn,\n    isLoaded,\n    userId\n  } = useAuth();\n  const {\n    user\n  } = useUser();\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [isProfileComplete, setIsProfileComplete] = useState(false);\n\n  // Check if user has completed their profile\n  useEffect(() => {\n    if (isSignedIn && isLoaded && userId) {\n      const profile = getUserProfile(userId);\n      if (profile) {\n        setIsProfileComplete(true);\n      } else {\n        setShowProfileModal(true);\n      }\n    }\n  }, [isSignedIn, isLoaded, userId]);\n  const handleProfileComplete = profileData => {\n    if (userId) {\n      saveUserProfile(userId, profileData);\n      setIsProfileComplete(true);\n      setShowProfileModal(false);\n    }\n  };\n\n  // Show loading state\n  if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-black\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-pumpkin text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Show public homepage for all users\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-black\",\n    children: [isSignedIn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4 z-10\",\n      children: /*#__PURE__*/_jsxDEV(UserButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(PublicHomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), isSignedIn && !isProfileComplete && /*#__PURE__*/_jsxDEV(ProfileCompletionModal, {\n      isOpen: showProfileModal,\n      onComplete: handleProfileComplete,\n      clerkUser: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xIDssZK+BjrBKh6y23dQ3FyTvyA=\", false, function () {\n  return [useAuth, useUser];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UserButton","useAuth","useUser","ProfileCompletionModal","PublicHomePage","jsxDEV","_jsxDEV","getUserProfile","userId","stored","localStorage","getItem","JSON","parse","saveUserProfile","profile","setItem","stringify","App","_s","isSignedIn","isLoaded","user","showProfileModal","setShowProfileModal","isProfileComplete","setIsProfileComplete","handleProfileComplete","profileData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onComplete","clerkUser","_c","$RefreshReg$"],"sources":["/app/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { UserButton, useAuth, useUser } from '@clerk/clerk-react';\nimport ProfileCompletionModal from './ProfileCompletionModal';\nimport PublicHomePage from './PublicHomePage';\n\n// Mock user profile storage - in real app this would be in a database\nconst getUserProfile = (userId: string) => {\n  const stored = localStorage.getItem(`userProfile_${userId}`);\n  return stored ? JSON.parse(stored) : null;\n};\n\nconst saveUserProfile = (userId: string, profile: any) => {\n  localStorage.setItem(`userProfile_${userId}`, JSON.stringify(profile));\n};\n\nfunction App() {\n  const { isSignedIn, isLoaded, userId } = useAuth();\n  const { user } = useUser();\n  const [showProfileModal, setShowProfileModal] = useState(false);\n  const [isProfileComplete, setIsProfileComplete] = useState(false);\n\n  // Check if user has completed their profile\n  useEffect(() => {\n    if (isSignedIn && isLoaded && userId) {\n      const profile = getUserProfile(userId);\n      if (profile) {\n        setIsProfileComplete(true);\n      } else {\n        setShowProfileModal(true);\n      }\n    }\n  }, [isSignedIn, isLoaded, userId]);\n\n  const handleProfileComplete = (profileData: any) => {\n    if (userId) {\n      saveUserProfile(userId, profileData);\n      setIsProfileComplete(true);\n      setShowProfileModal(false);\n    }\n  };\n\n  // Show loading state\n  if (!isLoaded) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-black\">\n        <div className=\"text-pumpkin text-xl\">Loading...</div>\n      </div>\n    );\n  }\n\n  // Show public homepage for all users\n  return (\n    <div className=\"min-h-screen bg-black\">\n      {/* Show UserButton for authenticated users */}\n      {isSignedIn && (\n        <div className=\"absolute top-4 right-4 z-10\">\n          <UserButton />\n        </div>\n      )}\n\n      {/* Show public homepage */}\n      <PublicHomePage />\n\n      {/* Show profile completion modal for authenticated users without complete profiles */}\n      {isSignedIn && !isProfileComplete && (\n        <ProfileCompletionModal \n          isOpen={showProfileModal} \n          onComplete={handleProfileComplete}\n          clerkUser={user}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}