{"ast":null,"code":"const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000';class UsersApiService{async request(endpoint){let options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const url=`${API_BASE_URL}${endpoint}`;// Get authentication token from Clerk\nlet authHeader={};try{// For now, we'll skip authentication for user endpoints\n// This is a temporary workaround - in production, you'd need proper JWT handling\n}catch(error){console.log('No authentication token available');}const config={headers:{'Content-Type':'application/json',...authHeader,...options.headers},...options};try{const response=await fetch(url,config);if(!response.ok){throw new Error(`API request failed: ${response.status} ${response.statusText}`);}return await response.json();}catch(error){console.error('API request error:',error);throw error;}}// User profile endpoints\nasync getUserProfile(){try{return await this.request('/user/profile');}catch(error){console.error('Failed to get user profile:',error);return null;}}async updateUserProfile(profileData){return this.request('/user/profile',{method:'PUT',body:JSON.stringify(profileData)});}async createUserProfile(profileData){return this.request('/user/profile',{method:'POST',body:JSON.stringify(profileData)});}}export const usersApi=new UsersApiService();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}